{"version":3,"file":"static/js/811.ca064bdc.chunk.js","mappings":"sIAAO,SAASA,EAAYC,GAU1B,OAAOC,MAAMD,EATG,CACdE,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAIqBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACpC,C,+GCVD,EAA4B,0BCA5B,EAA4B,6BAA5B,EAAgE,wBAAhE,EAAqG,8BAArG,EAAqJ,mCAArJ,EAAoM,6B,kBCE7L,SAASC,EAAT,GAAwC,IAAnBC,EAAkB,EAAlBA,eAC1B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAUC,SARV,SAAAC,GACnBA,EAAMC,iBAENR,EAAe,CAAEE,WAAAA,GAClB,EAIG,WACE,mBAAQO,KAAK,SAASL,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,EAAjB,uBAGF,kBACED,UAAWC,EACXI,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,MAAOV,EACPW,SAvBuB,SAAAN,GAC7BJ,EAAcI,EAAMO,cAAcF,MAAMG,cACzC,EAsBOC,YAAY,sBAKrB,C,qBC7Bc,SAASC,IACtB,OAA4BhB,EAAAA,EAAAA,UAAS,IAArC,eAAOiB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAgB,UAAGH,EAAaI,IAAI,qBAApB,QAAqC,IAE3DpC,EAAAA,EAAAA,GAAY,mDAAD,OAC0CmC,EAD1C,+CAGR5B,MAAK,SAAA8B,GACJP,EAAUO,EACX,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACP,KAGF,4BACE,SAACtB,EAAD,CAAWC,eAAgBsB,IAC1BJ,IACC,wBACGA,EAAOQ,QAAQK,KAAI,SAAAC,GAClB,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKD,EAAOE,IAAM9B,UAAWC,EAAxC,UACE,uBAAI2B,EAAOG,oBAFNH,EAAOE,GAMnB,QAKV,C","sources":["Api/FetchMovies.js","webpack://react-homework-template/./src/pages/movies/Movies.module.css?c186","webpack://react-homework-template/./src/components/searchBar/SearchBar.module.css?1f80","components/searchBar/SearchBar.js","pages/movies/Movies.js"],"sourcesContent":["export function fetchMovies(url) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5M2UzYWRjNjQwNmIyZDViMmMyYWFiMDk3ZDUzYWQzMCIsInN1YiI6IjY0YWU1MzVhM2UyZWM4MDE0ZjRhNjJjZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.xKfIgCNldFGWOwb-ee_imClQFf9RhlOtY09vqWqrv8o',\n    },\n  };\n\n  return fetch(url, options).then(res => res.json());\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"MovieLink\":\"Movies_MovieLink__pwP34\"};","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"SearchBar_Searchbar__mcDLP\",\"Form\":\"SearchBar_Form__NDz1j\",\"FormButton\":\"SearchBar_FormButton__kK-O9\",\"FormButtonLabel\":\"SearchBar_FormButtonLabel__UWZhN\",\"FormInput\":\"SearchBar_FormInput__v6-l-\"};","import css from './SearchBar.module.css';\nimport { useState } from 'react';\n\nexport function SearchBar({ onSearchParams }) {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputValueChange = event => {\n    setInputValue(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSearchParams({ inputValue });\n  };\n\n  return (\n    <div className={css.Searchbar}>\n      <form className={css.Form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={css.FormButton}>\n          <span className={css.FormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={css.FormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={inputValue}\n          onChange={handleInputValueChange}\n          placeholder=\"Search Movies\"\n        />\n      </form>\n    </div>\n  );\n}\n","import css from './Movies.module.css';\nimport { SearchBar } from 'components/searchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { NavLink, useSearchParams } from 'react-router-dom';\nimport { fetchMovies } from 'Api/FetchMovies';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const searchInputValue = searchParams.get('inputValue') ?? '';\n\n    fetchMovies(\n      `https://api.themoviedb.org/3/search/movie?query=${searchInputValue}&include_adult=false&language=en-US&page=1`\n    )\n      .then(results => {\n        setMovies(results);\n      })\n      .catch(error => console.log(error));\n  }, [searchParams]);\n\n  return (\n    <div>\n      <SearchBar onSearchParams={setSearchParams} />\n      {movies && (\n        <ul>\n          {movies.results.map(result => {\n            return (\n              <li key={result.id}>\n                <NavLink to={`${result.id}`} className={css.MovieLink}>\n                  <p>{result.original_title}</p>\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n"],"names":["fetchMovies","url","fetch","method","headers","accept","Authorization","then","res","json","SearchBar","onSearchParams","useState","inputValue","setInputValue","className","css","onSubmit","event","preventDefault","type","autoComplete","autoFocus","value","onChange","currentTarget","toLowerCase","placeholder","Movies","movies","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","searchInputValue","get","results","catch","error","console","log","map","result","to","id","original_title"],"sourceRoot":""}